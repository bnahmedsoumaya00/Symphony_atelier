{% extends 'base.html.twig' %}

{% block title %}Ajouter une catégorie{% endblock %}

{% block body %}
<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="modern-form-card">
                <div class="form-card-header">
                    <div class="header-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
                        </svg>
                    </div>
                    <h3 class="mb-0">Ajouter une catégorie</h3>
                </div>
                <div class="form-card-body">
                    {{ form_start(form, {'attr': {'id': 'categoryForm', 'novalidate': 'novalidate'}}) }}
                        <div class="form-group-modern">
                            <label class="form-label-modern">
                                Titre
                            </label>
                            {{ form_widget(form.titre, {
                                'attr': {
                                    'class': 'form-control-modern',
                                    'placeholder': 'Ex: Électronique, Vêtements, Maison...',
                                    'required': 'required',
                                    'minlength': '3',
                                    'maxlength': '255',
                                    'id': 'titre_input'
                                }
                            }) }}
                            {{ form_errors(form.titre, {'attr': {'class': 'error-message'}}) }}
                            <div class="error-message" id="titre_error" style="display: none;"></div>
                            <small class="form-hint">Entre 3 et 255 caractères</small>
                        </div>

                        <div class="form-group-modern">
                            <label class="form-label-modern">
                                Description
                            </label>
                            {{ form_widget(form.description, {
                                'attr': {
                                    'class': 'form-control-modern',
                                    'placeholder': 'Décrivez cette catégorie en quelques mots...',
                                    'rows': '4',
                                    'required': 'required',
                                    'minlength': '10',
                                    'maxlength': '500',
                                    'id': 'description_input'
                                }
                            }) }}
                            {{ form_errors(form.description, {'attr': {'class': 'error-message'}}) }}
                            <div class="error-message" id="description_error" style="display: none;"></div>
                            <small class="form-hint">Entre 10 et 500 caractères</small>
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn-submit" id="submitBtn">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <polyline points="20 6 9 17 4 12"></polyline>
                                </svg>
                                Créer la catégorie
                            </button>
                            <a href="{{ path('article_list') }}" class="btn-cancel">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <line x1="18" y1="6" x2="6" y2="18"></line>
                                    <line x1="6" y1="6" x2="18" y2="18"></line>
                                </svg>
                                Annuler
                            </a>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .modern-form-card {
        background: linear-gradient(145deg, rgba(51, 65, 85, 0.6), rgba(51, 65, 85, 0.4));
        border: 1px solid rgba(99, 102, 241, 0.2);
        border-radius: 24px;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4), 
                    0 0 0 1px rgba(99, 102, 241, 0.1),
                    inset 0 1px 0 rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .modern-form-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 30px 80px rgba(0, 0, 0, 0.5),
                    0 0 0 1px rgba(99, 102, 241, 0.3),
                    inset 0 1px 0 rgba(255, 255, 255, 0.1);
        border-color: rgba(99, 102, 241, 0.4);
    }

    .form-card-header {
        background: linear-gradient(135deg, #8b5cf6 0%, #6366f1 100%);
        padding: 2rem;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .form-card-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle at 20% 50%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
        pointer-events: none;
    }

    .header-icon {
        width: 48px;
        height: 48px;
        background: rgba(255, 255, 255, 0.15);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-icon svg {
        color: white;
    }

    .form-card-header h3 {
        color: white;
        font-weight: 600;
        font-size: 1.5rem;
        margin: 0;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    .form-card-body {
        padding: 2.5rem;
    }

    .form-group-modern {
        margin-bottom: 1.75rem;
        position: relative;
    }

    .form-label-modern {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.75rem;
        font-size: 0.95rem;
        letter-spacing: 0.01em;
    }

    .form-control-modern {
        width: 100%;
        padding: 1rem 1.25rem;
        background: rgba(30, 41, 59, 0.5);
        border: 2px solid rgba(71, 85, 105, 0.5);
        border-radius: 12px;
        color: var(--text-primary);
        font-size: 1rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        outline: none;
        resize: vertical;
        font-family: inherit;
    }

    .form-control-modern:focus {
        background: rgba(30, 41, 59, 0.7);
        border-color: var(--primary-color);
        box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.15),
                    0 8px 20px rgba(99, 102, 241, 0.1);
        transform: translateY(-2px);
    }

    .form-control-modern::placeholder {
        color: rgba(203, 213, 225, 0.4);
    }

    .form-control-modern.is-invalid {
        border-color: #ef4444;
        background: rgba(239, 68, 68, 0.05);
    }

    .form-hint {
        display: block;
        margin-top: 0.5rem;
        color: rgba(203, 213, 225, 0.6);
        font-size: 0.85rem;
        font-weight: 400;
    }

    .error-message {
        color: #f87171;
        font-size: 0.875rem;
        margin-top: 0.5rem;
        font-weight: 500;
    }

    .form-actions {
        display: flex;
        gap: 1rem;
        margin-top: 2.5rem;
        flex-wrap: wrap;
    }

    .btn-submit {
        flex: 1;
        min-width: 180px;
        padding: 1rem 2rem;
        background: linear-gradient(135deg, #8b5cf6 0%, #6366f1 100%);
        border: none;
        border-radius: 12px;
        color: white;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-submit:hover:not(:disabled) {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(139, 92, 246, 0.4);
        background: linear-gradient(135deg, #7c3aed 0%, #4f46e5 100%);
    }

    .btn-submit:active:not(:disabled) {
        transform: translateY(-1px);
    }

    .btn-submit:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .btn-cancel {
        padding: 1rem 2rem;
        background: rgba(71, 85, 105, 0.3);
        border: 2px solid rgba(71, 85, 105, 0.5);
        border-radius: 12px;
        color: var(--text-secondary);
        font-weight: 600;
        font-size: 1rem;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-cancel:hover {
        background: rgba(71, 85, 105, 0.5);
        border-color: rgba(71, 85, 105, 0.8);
        color: var(--text-primary);
        transform: translateY(-2px);
    }

    @media (max-width: 768px) {
        .form-card-body {
            padding: 1.5rem;
        }

        .form-actions {
            flex-direction: column;
        }

        .btn-submit,
        .btn-cancel {
            width: 100%;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('categoryForm');
    const titreInput = document.getElementById('titre_input');
    const descriptionInput = document.getElementById('description_input');
    const submitBtn = document.getElementById('submitBtn');
    const titreError = document.getElementById('titre_error');
    const descriptionError = document.getElementById('description_error');

    function validateField(input, errorDiv, minLength) {
        const value = input.value.trim();
        
        if (value.length === 0) {
            input.classList.add('is-invalid');
            errorDiv.style.display = 'block';
            errorDiv.textContent = 'Ce champ est obligatoire.';
            return false;
        } else if (value.length < minLength) {
            input.classList.add('is-invalid');
            errorDiv.style.display = 'block';
            errorDiv.textContent = `Minimum ${minLength} caractères requis.`;
            return false;
        } else {
            input.classList.remove('is-invalid');
            errorDiv.style.display = 'none';
            return true;
        }
    }

    titreInput.addEventListener('input', function() {
        validateField(titreInput, titreError, 3);
        checkFormValidity();
    });

    descriptionInput.addEventListener('input', function() {
        validateField(descriptionInput, descriptionError, 10);
        checkFormValidity();
    });

    titreInput.addEventListener('blur', function() {
        validateField(titreInput, titreError, 3);
    });

    descriptionInput.addEventListener('blur', function() {
        validateField(descriptionInput, descriptionError, 10);
    });

    form.addEventListener('submit', function(e) {
        e.preventDefault();

        const isTitreValid = validateField(titreInput, titreError, 3);
        const isDescriptionValid = validateField(descriptionInput, descriptionError, 10);

        if (!isTitreValid || !isDescriptionValid) {
            alert('Veuillez remplir tous les champs correctement avant de continuer.');
            
            if (!isTitreValid) {
                titreInput.focus();
            } else if (!isDescriptionValid) {
                descriptionInput.focus();
            }
            
            return false;
        }

        form.submit();
    });

    function checkFormValidity() {
        const titreValue = titreInput.value.trim();
        const descriptionValue = descriptionInput.value.trim();
        
        if (titreValue.length < 3 || descriptionValue.length < 10) {
            submitBtn.disabled = true;
        } else {
            submitBtn.disabled = false;
        }
    }

    checkFormValidity();
});
</script>
{% endblock %}